name: Translate professionalize.com

on:
  workflow_dispatch:
    inputs:
      site:
        description: "Which site to translate"
        type: choice
        options: [www, agents, about]
        default: www
        required: true
      langs:
        description: "Comma-separated target languages (override default)"
        type: string
        default: "ko,fr,nl,de,pt,ru,vi,zh,ja,zh-tw,es,fil,ms,id,tr,it,ar,fa"
        required: false
      llm:
        description: "LLM provider (for websiteManager)"
        type: choice
        options: [chatgpt, gpt-oss, gemini]
        default: chatgpt
        required: true

permissions:
  contents: write

jobs:
  translate:
    name: Translate ${{ inputs.site }}.professionalize.com
    runs-on: ubuntu-latest
    timeout-minutes: 90

    env:
      # These will be finalized by the "Compute site variables" step
      SITE: ${{ inputs.site }}
      WEBSITE: ${SITE}.professionalize.com
      HUGO_THEME: custom
      LLM: ${{ inputs.llm }}
      LANGS: ${{ inputs.langs }}
      # Relative paths to Hugo & websiteManager repos paths on the runner      
      HUGO_CONTENT_PATH: hugo_content/content/${WEBSITE}/en    
      HUGO_I18N_PATH: hugo_content/i18n/en.json
      WEBSITE_MANAGER_PATH: website_manager/websiteManager

    steps:
      # 1) Checkout THIS repository (professionalize/professionalize)
      - name: Checkout professionalize repo
        uses: actions/checkout@v4
        with:
          repository: professionalize/professionalize
          path: hugo_content
          fetch-depth: 0
          submodules: true
          token: ${{ secrets.REPO_TOKEN }}

      # 2) Checkout websiteManager (separate private repo)
      - name: Checkout websiteManager (C# app)
        uses: actions/checkout@v4
        with:
          repository: salmansarfraz/websiteManager
          path: website_manager
          token: ${{ secrets.WEBSITE_MANAGER_REPO_TOKEN }}
          fetch-depth: 0     

      # 4) Setup .NET 8
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      # 5) Build websiteManager
      - name: Build websiteManager
        run: dotnet build "$WEBSITE_MANAGER_PATH/websiteManager.csproj" -c Release

      # 6) Run websiteManager (reads env vars to translate files under HUGO_CONTENT_PATH)
      - name: Run translator
        env:
          # Required by your C# app (mirrors your docs workflow contract)
          WEBSITE:             ${{ env.WEBSITE }}
          HUGO_THEME:          ${{ env.HUGO_THEME }}
          LLM:                 ${{ env.LLM }}
          LANGS:               ${{ env.LANGS }}
          HUGO_CONTENT_PATH:   ${{ env.HUGO_CONTENT_PATH }}
          HUGO_I18N_PATH:      ${{ env.HUGO_I18N_PATH }}
        run: dotnet run --project "$WEBSITE_MANAGER_PATH/websiteManager.csproj" -- github

      # 7) Commit & push any JSON/TXT artifacts back to websiteManager repo (if it produces them)
      - name: Commit & push changes to websiteManager
        working-directory: website_manager
        run: |
          git config user.name  "Salman Sarfraz"
          git config user.email "kh.salman.sarfraz@gmail.com"
          git fetch origin
          git pull --strategy=ours origin master || true
          git add .
          git diff --cached --quiet || git commit -m "Update translation artifacts for ${{ env.WEBSITE }} ($(date -u +'%Y-%m-%dT%H:%M:%SZ'))"
          git push origin HEAD:master

      # 8) Commit & push translated content back to THIS repo
      - name: Commit & push translated content (professionalize)
        run: |
          git config user.name  "Salman Sarfraz"
          git config user.email "kh.salman.sarfraz@gmail.com"
          git fetch origin
          # Assume main branch is 'main'; change if different.
          git pull --strategy=ours origin main || true
          git add .
          git diff --cached --quiet || git commit -m "Translate ${WEBSITE} to local languages ($(date -u +'%Y-%m-%dT%H:%M:%SZ'))"
          git push origin HEAD:main
